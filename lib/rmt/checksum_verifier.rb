class RMT::ChecksumVerifier

  KNOWN_HASH_FUNCTIONS = %i[MD5 SHA1 SHA256 SHA384 SHA512].freeze

  class Exception < RuntimeError
  end

  ##
  # This method verifies that files are what they say that they are.
  # Any deviation in checksum will result in an Exception.
  #
  # Params:
  # - +checksum_type+:: The type of checksum (MD5, SHA256, ...).
  # - +checksum+:: The checksum hex generated by a checksum algorithm.
  # - +file_path+:: The path of the file to check.
  #
  # Raises:
  # - An exception if the file could not be verified.
  def self.verify_checksum(checksum_type, checksum_value, file_path)
    hash_function = checksum_type.gsub(/\W/, '').upcase.to_sym
    hash_function = :SHA1 if (hash_function == :SHA)

    unless KNOWN_HASH_FUNCTIONS.include? hash_function
      raise RMT::ChecksumVerifier::Exception.new("Unknown hash function #{checksum_type}")
    end

    digest = Digest.const_get(hash_function).file(file_path)

    raise RMT::ChecksumVerifier::Exception.new('Checksum doesn\'t match') unless (checksum_value == digest.to_s)
  end

end
